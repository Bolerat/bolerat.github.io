<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bolerat</title>
  
  
  <link href="https://bolerat.github.io/atom.xml" rel="self"/>
  
  <link href="https://bolerat.github.io/"/>
  <updated>2023-07-07T10:14:16.426Z</updated>
  <id>https://bolerat.github.io/</id>
  
  <author>
    <name>Bolerat</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023—Summer Vacation</title>
    <link href="https://bolerat.github.io/posts/35232/"/>
    <id>https://bolerat.github.io/posts/35232/</id>
    <published>2023-07-07T09:46:00.000Z</published>
    <updated>2023-07-07T10:14:16.426Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="791f4197431d7d781bd328cd51e893c5047b224e6504d7bb9439bee782569e48">efefacb2b086a20a19dfbda11f33fd914768c8f5f2c1217314d4bd2ce8da3aa3a94df65caf5e5c0641fcb4e27fc6410fcf735e0fb5e58de1890fb90c712ad1f16a0b1671b9454ff8cb8040b051f9871a627885a0745c42b58290a92835640bc313e4d41d11135392e765f2dcfa3c6db34d5b2396ddecbf166006de9e4a49cbbbae91976611deaab03877d0d29badccc7d6050291b358188539e473628b18c3093fca7b5c505b372fb79d33d37271e1a5d6395ab24746d7fb926d6a4638ae4f9d88787ca57f8d337e5f1700bd967c2f0cdd74b5ce73ae0d4074c1000756c7704732acd097a3ece3f8a9e271a96a73ba9f9da75440ebabc8f409e402a6c937d800264209a260b826776a0c1ad576ab390d2c901dbe655041cbc659893620b3124f29844852983d9d525e3cfd216e81937a3920ba5bc662af1006178c5f07f6f0a73568722d32dbbe33589713c1a2b2f92cffc92983480f08c8f89a3dad5cd369fdd95e09b4796f39270faef666909c120f83570a368719fad0b9ec28d2674157978d17bb0bdc0745fdb1ec8c4fc68473a6c0f4eceefe69c6afc0fda6127de1c41de6776b343cf7470b5a9ed2bb6034be2a6298c96a47ec09599c0622826b4e64ac94709ae5fea6c4e08659f01cdedb5845abed9e03505b9b31cad2bcbb827265c9c7db82c283a3d8cacd8a077af88564be8fd5e3ac71b4af86afecf1677c414499cf5daf45cd802d1c9567416e0558aa4725d2e0ab5b938638a22a3d992e4d74598485e0d72c45d894133a8afe9655cd92244bb88b962c22d25334653c8e1ea89be4bd77bb80220ef69565b88a2a6d8c059e2c8c1e04680ad186d814cbcaa5bba72d4433125e1eed24c2f6a05127632a4be1feeaea96c6446be35a9c9edf67c065040772b641918de8ddd23dc26e627e500bba82d9a3152e0d52c1e99fb2964b5742c4b01ee5c559a37bb10bbb88c6529c963918e8e233e658c434d86a5c6e2c27d9d5d722f08e7801e343ca2ee7e725e69364056dd596c69dc0e337b90485464600cc1f567221eee24ea63ad1890e23f69a3fac03bc22575e7285c5106ae5dd7130b1a6e63dd3b72c1409d2c1e47048af8187cdf70d22d79012e1cc079d92856b10bdd2f470ce4bd42bfd67699c63c235824641ec57dfadad292d26f43044ce49fb968af21ce86b57d8ac177d57b8b837e6e3f2341357d9b99bc2b3e2c377fd2301a15088078c156cc212e960d768d95645e0d4497e347e44833791298b38d181</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">已加密</summary>
    
    
    
    
    <category term="暑假" scheme="https://bolerat.github.io/tags/%E6%9A%91%E5%81%87/"/>
    
    <category term="plan" scheme="https://bolerat.github.io/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>在linux上使用小皮搭建sqli靶场</title>
    <link href="https://bolerat.github.io/posts/46934/"/>
    <id>https://bolerat.github.io/posts/46934/</id>
    <published>2023-07-04T06:48:00.000Z</published>
    <updated>2023-07-04T07:04:49.335Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在linux上使用小皮搭建sqli靶场</p><a id="more"></a><h3 id="安装小皮面板"><a href="#安装小皮面板" class="headerlink" title="安装小皮面板"></a>安装小皮面板</h3><p>kali是基于Debian的，所以按照Debian无docker的版本安装的</p><img src="/pic/l1.png" alt="1" style="zoom:70%" /><p>安装成功，可以看到内网网址，直接登入小皮</p><img src="/pic/l2.png" alt="1" style="zoom:70%" /><p>然后安装基本套件，并启动SQL</p><img src="/pic/l3.png" alt="1" style="zoom:50%" /><h3 id="安装sqli-labs靶场"><a href="#安装sqli-labs靶场" class="headerlink" title="安装sqli-labs靶场"></a>安装sqli-labs靶场</h3><p>图个方便，给sqli-labs设置了域名</p><img src="/pic/l4.png" alt="1" style="zoom:50%" /><p>给靶场文件夹设置755权限（所有者拥有可读、可写、可执行权限,所属组与其他用户仅拥有可读与可执行权限）</p><img src="/pic/l5.png" alt="1" style="zoom:100%" /><p>从网页配置靶场</p><img src="/pic/l6.png" alt="1" style="zoom:50%" /><p>第一关SQL注入尝试</p><img src="/pic/l7.png" alt="1" style="zoom:50%" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">参考资料：http:&#x2F;&#x2F;www.xbhp.cn&#x2F;news&#x2F;20895.html</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在linux上使用小皮搭建sqli靶场&lt;/p&gt;</summary>
    
    
    
    
    <category term="web" scheme="https://bolerat.github.io/tags/web/"/>
    
    <category term="linux" scheme="https://bolerat.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>模板注入</title>
    <link href="https://bolerat.github.io/posts/17608/"/>
    <id>https://bolerat.github.io/posts/17608/</id>
    <published>2023-06-12T16:51:00.000Z</published>
    <updated>2023-06-12T16:59:46.833Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>学习</p><a id="more"></a><ul><li>学习<ul><li><a href="https://blog.csdn.net/m0_61607810/article/details/121568121" target="_blank" rel="noopener">模板引擎</a></li><li><a href="https://www.cnblogs.com/GoIcejio/p/16593990.html" target="_blank" rel="noopener">SSTI模板注入 </a></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习&lt;/p&gt;</summary>
    
    
    
    
    <category term="CTF" scheme="https://bolerat.github.io/tags/CTF/"/>
    
    <category term="web" scheme="https://bolerat.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Kali的升级失败</title>
    <link href="https://bolerat.github.io/posts/59374/"/>
    <id>https://bolerat.github.io/posts/59374/</id>
    <published>2023-06-03T15:47:00.000Z</published>
    <updated>2023-06-03T15:57:23.964Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>关于我的kali今天崩掉了。</p><a id="more"></a><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><p>   最开始，我在安装盲水印需要用到的opencv-python库时，一切都还好，后来一直无法安装成功，返回“无法定位opencv-python”的结果，阅读了网上的教程，我觉得可以更新一下系统。</p><p>   于是我update了，在快要结束的时候报错了，浏览器也用不了，整个系统瘫痪，重启之后，正确的密码无法登入系统了。于是在尝试各种策略后，我成功地无法进入登录界面了，开机即报错，于是就有了以下状态：</p><img src="/pic/lk2.jpg" alt="1" style="zoom:50%" /><h3 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h3><p>与其反复报错，我自然地重装了kali，只是可惜我之前安装了那么多库和工具…</p><img src="/pic/lk1.jpg" alt="1" style="zoom:50%" />]]></content>
    
    
    <summary type="html">&lt;p&gt;关于我的kali今天崩掉了。&lt;/p&gt;</summary>
    
    
    
    
    <category term="linux" scheme="https://bolerat.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CTF PWN打基础（寄存器）</title>
    <link href="https://bolerat.github.io/posts/7491/"/>
    <id>https://bolerat.github.io/posts/7491/</id>
    <published>2023-05-29T11:46:00.000Z</published>
    <updated>2023-06-01T05:53:06.282Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>寄存器</p><a id="more"></a><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><p>寄存器是计算机暂存指令、数据和地址的地方.</p><h3 id="常用寄存器及其功能整理"><a href="#常用寄存器及其功能整理" class="headerlink" title="常用寄存器及其功能整理"></a>常用寄存器及其功能整理</h3><ul><li>RIP：程序计数寄存器，来存放下一条即将用来执行的指令的地址，它决定程序执行的流程。（较常用）</li><li>RBP：栈基寄存器，存放当前栈帧的栈底地址（较常用）</li><li>RAX：通用寄存器。存放函数返回值</li><li>RSP：栈顶寄存器，存放当前栈帧的栈顶地址（较常用）</li><li>RAX：随机存取寄存器</li><li>AX：累加寄存器，分为AH高八位和AL低八位</li><li>AH：累加寄存器，AX（16位）寄存器的高八位</li><li>AL：累加寄存器，AX（16位）寄存器的低八位</li><li>EAX:累加寄存器，是很多加法乘法指令的缺省寄存器</li><li>EBX：基地址寄存器，在内存寻址时存放基地址</li><li>ECX：计数器</li><li>EDX：数据寄存器，被用于来放整数除法产生的余数</li><li>ESI：源变址寄存器</li><li>EDI：目的变址寄存器</li><li>EBP：扩展基址指针寄存器，EBP来存储当前函数状态的基地址，在函数运行时不变，可以用来索引|确定函数参数或局部变量 的位置。（较常用）</li><li>ESP：栈指针寄存器，ESP用来存储函数调用栈的栈顶地址，在压栈和退栈时 发生变化。（较常用）</li><li>EIP：指令指针寄存器，EIP用来存储即将执行的程序指令的地址, cpu依照EIP的存储内容读取指令并执行，EIP 随之指向相 邻的下一条指令,如此反复,程序就得以连续执行指令。（较常用）</li></ul><h3 id="寄存器大小"><a href="#寄存器大小" class="headerlink" title="寄存器大小"></a>寄存器大小</h3><ul><li>64位cpu对应RSP（栈顶寄存器）,RBP（栈基寄存器）,RIP（程序计数寄存器）三个寄存器。</li><li>32位cpu则对应ESP（栈指针寄存器），EBP（扩展基址指针寄存器），EIP（指令指针寄存器）三个寄存器。</li><li>R开头：64bit, 8字节（1字节=8bit）</li><li>E开头：32bit, 4字节</li><li>EAX（累加寄存器）是32位， AX 是EAX的低16位 ， AL 和AH是AX的低8位和高8位。</li><li>AX,BX,CX：16bit, 2字节</li><li>AH, AL: 8bit, 1字节</li></ul><h3 id="附加知识"><a href="#附加知识" class="headerlink" title="附加知识"></a>附加知识</h3><ul><li>BX是基（base）地址寄存器：四个寄存器中唯一可作为存储器指针使用的寄存器。</li><li>CX寄存器是计数(count)寄存器：在字符串操作和循环操作时，用它来控制重复循环操作次数。在移位操作时，cl寄存器用来保存移位的位数。</li><li>BP和SP寄存器称为指针寄存器：BP主要用于给出堆栈中数据区基址的偏移，从而方便地实现直接存取堆栈中的数据，所以BP也称为基指针寄存器，正常情况下SP只作为堆栈指针使用，即保存堆栈栈顶地址的偏移。</li></ul><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://blog.csdn.net/weixin_43780092/article/details/126694251" target="_blank" rel="noopener">CTF PWN基础知识</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;寄存器&lt;/p&gt;</summary>
    
    
    
    
    <category term="PWN" scheme="https://bolerat.github.io/tags/PWN/"/>
    
    <category term="寄存器" scheme="https://bolerat.github.io/tags/%E5%AF%84%E5%AD%98%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>练习赛Memos</title>
    <link href="https://bolerat.github.io/posts/52558/"/>
    <id>https://bolerat.github.io/posts/52558/</id>
    <published>2023-05-20T16:39:48.000Z</published>
    <updated>2023-05-20T17:05:35.030Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>赛事直达</p><a id="more"></a><ul><li><p>Algorithm</p><ul><li><a href="https://codeforces.com/contests" target="_blank" rel="noopener">Codeforce比赛</a></li><li><a href="https://www.luogu.com.cn/contest/list" target="_blank" rel="noopener">洛谷比赛</a></li><li><a href="https://pintia.cn/problem-sets/my" target="_blank" rel="noopener">PTA题目练习集赛</a></li><li><a href="https://ac.nowcoder.com/acm/contest/vip-index" target="_blank" rel="noopener">牛客竞赛</a></li></ul></li><li><p>CTF</p><ul><li><a href="https://iscc.isclab.org.cn/" target="_blank" rel="noopener">ISCC</a></li><li><a href="https://adworld.xctf.org.cn/contest/list" target="_blank" rel="noopener">攻防世界赛事中心</a></li><li><a href="https://www.ctfhub.com/#/calendar" target="_blank" rel="noopener">CTFHub赛事中心</a></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;赛事直达&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Blog安卓版</title>
    <link href="https://bolerat.github.io/posts/25776/"/>
    <id>https://bolerat.github.io/posts/25776/</id>
    <published>2023-05-18T04:07:00.000Z</published>
    <updated>2023-06-01T05:57:28.417Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="/assets/blog.apk">安卓安装包</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="博客搭建" scheme="https://bolerat.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>解决优化后的aplayer无法在电脑端置顶</title>
    <link href="https://bolerat.github.io/posts/38459/"/>
    <id>https://bolerat.github.io/posts/38459/</id>
    <published>2023-05-17T09:02:00.000Z</published>
    <updated>2023-05-17T09:13:36.824Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>对左侧层数进行调整</p><a id="more"></a><h3 id="z-index属性"><a href="#z-index属性" class="headerlink" title="z-index属性"></a>z-index属性</h3><p>   <strong>z-index</strong>是针对网页显示中的一个特殊属性。因为显示器是显示的图案是一个二维平面，拥有x轴和y轴来表示位置属性。为了表示三维立体的概念如显示元素的上下层的叠加顺序引入了z-index属性来表示z轴的区别。表示一个元素在叠加顺序上的上下立体关系。（来自<strong>百度百科</strong>）</p><h3 id="设置z-index属性"><a href="#设置z-index属性" class="headerlink" title="设置z-index属性"></a>设置z-index属性</h3><p><strong>注意</strong>：z-index只对定位元素有作用。要设置非static的定位属性（position），z-index才会生效。</p><p>将<code>yilia\layout\layout.ejs</code>中的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;container&quot; q-class&#x3D;&quot;show:isCtnShow&quot;&gt;</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;container&quot; q-class&#x3D;&quot;show:isCtnShow&quot; style&#x3D;&quot;position:relative; z-index:  0;&quot;&gt;</span><br></pre></td></tr></table></figure><p>本解决方法是针对<a href="https://www.yansheng.fun/article/bf60dd05.html" target="_blank" rel="noopener">hexo+yilia添加APlayer音乐播放器</a><br>中的问题：<code>播放器在pc端反而不显示，会被左侧栏挡住，只在手机端显示</code>进行解决，同时也因为我也遇到这种情况，就做了优化。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对左侧层数进行调整&lt;/p&gt;</summary>
    
    
    
    
    <category term="博客搭建" scheme="https://bolerat.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>pip的使用以及国内pip镜像源</title>
    <link href="https://bolerat.github.io/posts/39627/"/>
    <id>https://bolerat.github.io/posts/39627/</id>
    <published>2023-05-15T14:30:00.000Z</published>
    <updated>2023-05-17T07:15:23.673Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>直接用<code>pip install</code>安装Python包<strong>太慢了</strong>，经常<strong>time out</strong>，所以用国内镜像源来进行pip安装会更快。</p><a id="more"></a><h3 id="pip是什么"><a href="#pip是什么" class="headerlink" title="pip是什么"></a>pip是什么</h3><p> pip 是一个现代的，通用的 Python 包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。注：pip 已内置于 Python 3.4 和 2.7 及以上版本，其他版本需另行安装。（来自<strong>百度百科</strong>）</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install -i http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple</span><br><span class="line">&#x2F;&#x2F;阿里云 ，其中-i表示用后面的镜像源下载包</span><br><span class="line"></span><br><span class="line">pip install  -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple jwt</span><br><span class="line">&#x2F;&#x2F;例子，用清华源下载jwt（ctf常用的一个库）</span><br></pre></td></tr></table></figure><p>更多用法可见 <a href="https://pip.pypa.io/en/stable/cli/pip_install/" target="_blank" rel="noopener">pip install</a></p><h3 id="国内源"><a href="#国内源" class="headerlink" title="国内源"></a>国内源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">阿里云：</span><br><span class="line">https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line">百度：</span><br><span class="line">https:&#x2F;&#x2F;mirror.baidu.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line">豆瓣：</span><br><span class="line">http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F;</span><br><span class="line">清华：</span><br><span class="line">https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple&#x2F;</span><br><span class="line">中科大：</span><br><span class="line">https:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple&#x2F;</span><br></pre></td></tr></table></figure><p>你也可以访问<a href="https://mirrors.cernet.edu.cn/" target="_blank" rel="noopener">校园网镜像站</a></p><h3 id="常用pip命令"><a href="#常用pip命令" class="headerlink" title="常用pip命令"></a>常用pip命令</h3><p>来自<strong>百度百科</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">pip  [options]</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">install  安装包安装</span><br><span class="line">download 下载下载包</span><br><span class="line">uninstall  卸载卸载包</span><br><span class="line">freeze  冻结按需求格式安装的包的输出</span><br><span class="line">list 列表列出已安装的包</span><br><span class="line">show  显示已安装软件包的信息</span><br><span class="line">check  检查已安装的软件包是否具有兼容的依赖项</span><br><span class="line">config  配置管理本地和全局配置</span><br><span class="line">search  搜索PyPI查找包</span><br><span class="line">wheel  根据您的需求构建轮子</span><br><span class="line">hash  包存档的哈希计算值</span><br><span class="line">completion 用于命令完成的辅助命令</span><br><span class="line">debug  显示对调试有用的信息</span><br><span class="line">help  帮助显示命令的帮助</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">百度百科（pip）：https:&#x2F;&#x2F;baike.baidu.com&#x2F;item&#x2F;PIP&#x2F;20435212</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;直接用&lt;code&gt;pip install&lt;/code&gt;安装Python包&lt;strong&gt;太慢了&lt;/strong&gt;，经常&lt;strong&gt;time out&lt;/strong&gt;，所以用国内镜像源来进行pip安装会更快。&lt;/p&gt;</summary>
    
    
    
    
    <category term="pip" scheme="https://bolerat.github.io/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>关于getchar与while</title>
    <link href="https://bolerat.github.io/posts/44515/"/>
    <id>https://bolerat.github.io/posts/44515/</id>
    <published>2023-02-04T04:28:00.000Z</published>
    <updated>2023-05-17T07:13:42.784Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>值得注意的是记得<strong>初始化</strong>字符数组和while中运算符的<strong>优先级</strong>     </p><a id="more"></a>     <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">char s;</span><br><span class="line">char s2[1001]&#x3D;&#123;&#125;,s1[2]&#x3D;&#123;&#125;;</span><br><span class="line">while((s&#x3D;getchar())!&#x3D;&#39;\n&#39;)&#123;</span><br><span class="line">s1[0]&#x3D;s;</span><br><span class="line">strcat(s2,s1);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;s2;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;值得注意的是记得&lt;strong&gt;初始化&lt;/strong&gt;字符数组和while中运算符的&lt;strong&gt;优先级&lt;/strong&gt;     &lt;/p&gt;</summary>
    
    
    
    
    <category term="C/C++语言基础" scheme="https://bolerat.github.io/tags/C-C-%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
