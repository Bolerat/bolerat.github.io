<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL基础操作</title>
      <link href="/posts/33509/"/>
      <url>/posts/33509/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>SQL入门</p><a id="more"></a><h3 id="SQL基础知识"><a href="#SQL基础知识" class="headerlink" title="SQL基础知识"></a>SQL基础知识</h3><h5 id="什么是SQL"><a href="#什么是SQL" class="headerlink" title="什么是SQL?"></a>什么是SQL?</h5><ul><li>SQL 指结构化查询语言，全称是 Structured Query Language。</li><li>SQL 可以访问和处理数据库，包括数据的增删改查。</li><li>SQL 在1986年成为 ANSI（American National Standards Institute 美国国家标准化组织）的一项标准，在 1987 年成为国际标准化组织（ISO）标准。</li><li>通过SQL语言可以管理RDBMS（关系数据库系统），例如Oracle、IBM的DB2和微软的SQL Server等。</li></ul><h5 id="一些名词："><a href="#一些名词：" class="headerlink" title="一些名词："></a>一些名词：</h5><ol><li>DB：database 数据库。</li><li>DBMS：Database Management System 数据库管理系统：用来管理数据库的计算机系统。分为RDBMS（关系数据库系统）、OODBMS（面向对象的数据库系统）和ORDBMS（对象关系数据库系统） 或者是 RDBMS和NoSQL（非关系型数据库系统）。</li></ol><h3 id="代码部分（基本操作）"><a href="#代码部分（基本操作）" class="headerlink" title="代码部分（基本操作）"></a>代码部分（基本操作）</h3><details><summary>实操代码（点击可展开）</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">-- 基本操作</span><br><span class="line">CREATE DATABASE &#96;sql_1&#96;;</span><br><span class="line">SHOW DATABASES;</span><br><span class="line">CREATE DATABASE &#96;sql_2&#96;;</span><br><span class="line">SHOW DATABASES;</span><br><span class="line">DROP DATABASE &#96;sql_2&#96;;</span><br><span class="line">SHOW DATABASES;</span><br><span class="line"></span><br><span class="line">-- sql资料类型</span><br><span class="line">USE &#96;sql_1&#96;;</span><br><span class="line">-- int 整数 </span><br><span class="line">-- decimal(3,2) 小数两位一共三位数</span><br><span class="line">-- varchar(10) 10个字符</span><br><span class="line">-- blob 二进制资料 图片影片档案</span><br><span class="line">-- date &#39;YYYY-MM-DD&#39;</span><br><span class="line">-- timestamp &#39;YYYY-MM-DD HH:MM:SS&#39;记录时间</span><br><span class="line"></span><br><span class="line">-- 创建表单</span><br><span class="line">create table student(</span><br><span class="line">&#96;student_id&#96; INT primary key,</span><br><span class="line">-- primary key(&#96;student_id&#96;),</span><br><span class="line">&#96;name&#96; varchar(30),</span><br><span class="line">&#96;major&#96; varchar(20)</span><br><span class="line">);</span><br><span class="line">describe &#96;student&#96;;</span><br><span class="line">drop table &#96;student&#96;;</span><br><span class="line">alter table &#96;student&#96; add gpa decimal(3,2);</span><br><span class="line">alter table &#96;student&#96; drop column gpa;</span><br><span class="line"></span><br><span class="line">-- 添加 查询</span><br><span class="line">insert into &#96;student&#96; values(1,&quot;小白&quot;,&quot;历史&quot;);</span><br><span class="line">select * from &#96;student&#96;;</span><br><span class="line">insert into &#96;student&#96; values(2,&quot;小黑&quot;,&quot;生物&quot;);</span><br><span class="line">insert into &#96;student&#96; values(3,&quot;小绿&quot;,NULL);</span><br><span class="line">insert into &#96;student&#96;(&#96;name&#96;,&#96;major&#96;,&#96;student_id&#96;) values(&quot;小蓝&quot;,&quot;英语&quot;,3);</span><br><span class="line">insert into &#96;student&#96;(&#96;name&#96;,&#96;student_id&#96;) values(&quot;小紫&quot;,5);</span><br><span class="line"></span><br><span class="line">-- 限制约束</span><br><span class="line">create table student_2(</span><br><span class="line">&#96;student_id&#96; INT primary key auto_increment,</span><br><span class="line">-- primary key(&#96;student_id&#96;),</span><br><span class="line">&#96;name&#96; varchar(30) not null,</span><br><span class="line">&#96;major&#96; varchar(20) default &#39;历史&#39;</span><br><span class="line">);</span><br><span class="line">insert into &#96;student_2&#96;(&#96;name&#96;) values(&quot;小白&quot;);</span><br><span class="line">describe &#96;student_2&#96;;</span><br><span class="line">select * from &#96;student_2&#96;;</span><br><span class="line">insert into &#96;student_2&#96;(&#96;name&#96;) values(&quot;小黑&quot;);</span><br><span class="line">insert into &#96;student_2&#96;(&#96;name&#96;) values(&quot;小蓝&quot;);</span><br><span class="line">drop table &#96;student_2&#96;;</span><br><span class="line"></span><br><span class="line">-- 修改删除</span><br><span class="line">set SQL_SAFE_UPDATES &#x3D; 0;</span><br><span class="line">select * from &#96;student&#96;;</span><br><span class="line">update &#96;student&#96;</span><br><span class="line">SET &#96;major&#96; &#x3D; &#39;英语文学&#39;</span><br><span class="line">WHERE &#96;major&#96; &#x3D; &#39;英语&#39;;</span><br><span class="line">select * from &#96;student&#96;;</span><br><span class="line">update &#96;student&#96;</span><br><span class="line">SET &#96;major&#96; &#x3D; &#39;生化&#39; </span><br><span class="line">WHERE &#96;major&#96; &#x3D; NULL; -- 有点离谱了。。。</span><br><span class="line">delete from &#96;student&#96;</span><br><span class="line">where &#96;name&#96; &#x3D; &quot;小绿&quot; or &#96;name&#96; &#x3D; &#39;小紫&#39;;</span><br><span class="line">update &#96;student&#96;</span><br><span class="line">set &#96;name&#96; &#x3D; &#39;小白&#39;</span><br><span class="line">where student_id &#x3D;1;</span><br><span class="line"></span><br><span class="line">-- 取得资料</span><br><span class="line">use &#96;sql_1&#96;;</span><br><span class="line">show databases;</span><br><span class="line">select &#96;name&#96;,&#96;major&#96; from &#96;student&#96; </span><br><span class="line">where &#96;major&#96; &#x3D; &#39;英语&#39;</span><br><span class="line">-- order by &#96;major&#96; desc limit 2</span><br><span class="line">;</span><br><span class="line">set SQL_SAFE_UPDATES &#x3D; 0;</span><br><span class="line">update &#96;student&#96; </span><br><span class="line">set &#96;student_id&#96; &#x3D; 3</span><br><span class="line">where &#96;student_id&#96; &#x3D; 4;</span><br><span class="line">select * from &#96;student&#96;;</span><br><span class="line">select *</span><br><span class="line">from &#96;student&#96;</span><br><span class="line">where &#96;major&#96; in(&#39;英语&#39;,&#39;语文&#39;);</span><br><span class="line">-- 等价于 where &#96;major&#96; &#x3D; &#39;英语&#39; or &#96;major&#96; &#x3D; &#39;语文&#39;;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 2 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php实现文件上传与数据库交互</title>
      <link href="/posts/46105/"/>
      <url>/posts/46105/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>文件上传与数据库交互</p><a id="more"></a><h3 id="上传步骤"><a href="#上传步骤" class="headerlink" title="上传步骤"></a>上传步骤</h3><ul><li>选择文件 </li><li>提交文件到服务器</li><li>服务器进行上传操作</li><li>服务器反馈上传结果</li></ul><h3 id="上传限制"><a href="#上传限制" class="headerlink" title="上传限制"></a>上传限制</h3><h5 id="大小与时间限制"><a href="#大小与时间限制" class="headerlink" title="大小与时间限制"></a>大小与时间限制</h5><p>对于服务器而言，能够承受的上传文件大小是有限的，不能让用户上传超大的文件。可以在php.ini配置文件中设置</p><ul><li>upload_max_filesize：上传文件大小限制</li><li>post_max_size：最大POST数据限制</li><li>memory_limit：内存限制，PHP5.2之前（默认8M）、PHP5.2(16M)、PHP5.2之后（128M）</li></ul><p>逻辑顺序上：</p><ul><li>memory_limit&gt;post_max_size&gt;upload_max_filesize </li></ul><p>对于时间限制：</p><ul><li>max_execution_time：程序执行时间限制</li><li>set_time_limit(0)：0表示没有时间限制</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">max_execution_time &#x3D; 30&#x2F;&#x2F;单位默认为second，时间默认为30秒</span><br><span class="line">upload_max_filesize &#x3D; 100M&#x2F;&#x2F;文件上传最大限制100M</span><br></pre></td></tr></table></figure><h5 id="文件类型限制"><a href="#文件类型限制" class="headerlink" title="文件类型限制"></a>文件类型限制</h5><p>通过对上传的文件的mimeType过滤处理。在PHP中利用$_FILES’file’来获取上传文件的mimeType。并使用in_array()函数对文件的mimeType进行判断，再决定是否能够上传。</p><h5 id="安全检查"><a href="#安全检查" class="headerlink" title="安全检查"></a>安全检查</h5><p>对于上传的文件，需要检查用户是否上传不安全的文件，诸如木马、病毒、脚本等等。</p><h3 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h3><h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例 1"></a>实例 1</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHP文件上传代码实例(来源自PHP中文网)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$allow_exts &#x3D; array(&#39;jpg&#39;, &#39;jpeg&#39;, &#39;gif&#39;, &#39;png&#39;, &#39;txt&#39;);</span><br><span class="line"></span><br><span class="line">$upload_dir &#x3D; &#39;uploads&#x2F;&#39;;</span><br><span class="line"></span><br><span class="line">$max_size &#x3D; 1024 * 1024;</span><br><span class="line"></span><br><span class="line">if ($_FILES[&#39;file&#39;][&#39;error&#39;] !&#x3D; UPLOAD_ERR_OK) &#123;</span><br><span class="line">    echo &#39;上传失败，请稍后再试&#39;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$temp_file &#x3D; $_FILES[&#39;file&#39;][&#39;tmp_name&#39;];</span><br><span class="line"></span><br><span class="line">$file_name &#x3D; $_FILES[&#39;file&#39;][&#39;name&#39;];</span><br><span class="line"></span><br><span class="line">$file_ext &#x3D; strtolower(pathinfo($file_name, PATHINFO_EXTENSION));</span><br><span class="line"></span><br><span class="line">if (!in_array($file_ext, $allow_exts)) &#123;</span><br><span class="line">    echo &#39;文件类型不符合要求，请上传指定类型的文件&#39;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($_FILES[&#39;file&#39;][&#39;size&#39;] &gt; $max_size) &#123;</span><br><span class="line">    echo &#39;文件大小不能超过1MB，请重新上传&#39;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (!is_uploaded_file($temp_file)) &#123;</span><br><span class="line">    echo &#39;非法上传，请重新上传&#39;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (!file_exists($upload_dir)) &#123;</span><br><span class="line">    mkdir($upload_dir);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">if (move_uploaded_file($temp_file, $upload_dir . $file_name)) &#123;</span><br><span class="line">    echo &#39;上传成功&#39;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">echo &#39;上传失败，请稍后再试&#39;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>上述代码中，使用了几个PHP内置函数来实现文件上传的基本功能。其中，in_array()函数用来判断上传的文件类型是否符合要求。pathinfo()函数用来获取上传文件的后缀名。is_uploaded_file()函数用来校验是否是合法的上传文件，防止非法上传。move_uploaded_file()函数则用来将上传缓存文件移动到指定目录，完成文件上传过程。</p><h5 id="实例-2（实战）"><a href="#实例-2（实战）" class="headerlink" title="实例 2（实战）"></a>实例 2（实战）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表单上传-前台html代码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;upload.php&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot;&#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><p>enctype属性有两个，“application/x-www-form-urlencoded”，enctype属性值设为这个表示上传的内容为文本，所以一般我们只是上传文本信息的时候不需要设定enctype属性，因为浏览器给的enctype默认值就是它。而当我们上传文件的时候，则需要显性的设置enctype为“multipart/form-data”，表示以二进制形式把数据传到服务器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHP-后台文件上传</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$fileinfo&#x3D;$_FILES[&#39;file&#39;][&#39;tmp_name&#39;];</span><br><span class="line">$filepath&#x3D;&quot;files&#x2F;&quot;.$_FILES[&#39;file&#39;][&#39;name&#39;];</span><br><span class="line">move_uploaded_file($fileinfo,$filepath);</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure><h3 id="数据库交互"><a href="#数据库交互" class="headerlink" title="数据库交互"></a>数据库交互</h3><p>使用PHP实现数据交互需要用到以下两个组件：</p><ol><li><p>HTTP请求：PHP能够处理HTTP请求，就能够获取到从客户端发送来的数据。最常用的HTTP请求方法是GET和POST，分别用于向服务器请求数据和向服务器发送数据。</p></li><li><p>数据库连接：PHP提供了一种称为mysqli的内置库，能够让你轻松地与MySQL数据库进行交互。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; 建立数据库连接</span><br><span class="line">$conn &#x3D; new mysqli(&quot;localhost&quot;, &quot;数据库用户名&quot;, &quot;数据库密码&quot;, &quot;数据库名称&quot;);</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 检查连接是否成功</span><br><span class="line">if ($conn-&gt;connect_error) &#123;</span><br><span class="line">    die(&quot;连接失败: &quot; . $conn-&gt;connect_error);</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 如果有POST请求</span><br><span class="line">if ($_SERVER[&quot;REQUEST_METHOD&quot;] &#x3D;&#x3D; &quot;POST&quot;) &#123;</span><br><span class="line">    &#x2F;&#x2F; 获取POST请求中的数据</span><br><span class="line">    $data &#x3D; $_POST[&quot;data&quot;];</span><br><span class="line"> </span><br><span class="line">    &#x2F;&#x2F; 执行SQL语句</span><br><span class="line">    $sql &#x3D; &quot;INSERT INTO 测试表 (数据) VALUES (&#39;$data&#39;)&quot;;</span><br><span class="line">    if ($conn-&gt;query($sql) &#x3D;&#x3D;&#x3D; TRUE) &#123;</span><br><span class="line">        &#x2F;&#x2F; 数据插入成功</span><br><span class="line">        echo &quot;新纪录插入成功&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        &#x2F;&#x2F; 数据插入失败</span><br><span class="line">        echo &quot;Error: &quot; . $sql . &quot;&quot; . $conn-&gt;error;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 关闭数据库连接</span><br><span class="line">$conn-&gt;close();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><ol><li><p>创建mysqli连接，并将连接信息保存在$conn变量中。</p></li><li><p>检查连接是否成功， 如果没有连接成功，程序将输出连接错误，并中止程序的执行。</p></li><li><p>如果当前的HTTP请求是一个POST请求，从请求中获取所发送的数据, 并将数据保存在$data 变量中。</p></li><li><p>执行SQL语句以将所接收的数据插入到MySQL数据库中。可以使用mysqli的query()方法来执行SQL语句。</p></li><li><p>如果插入操作成功了，则向浏览器发送一条消息表明新记录插入成功。</p></li><li><p>如果插入操作失败，则输出错误信息并关闭连接。</p></li><li><p>最后，关闭数据库连接以释放资源。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参考资料：</span><br><span class="line">后盾人文档-PHP文件上传：https:&#x2F;&#x2F;doc.houdunren.com&#x2F;系统课程&#x2F;php&#x2F;7 文件上传.html</span><br><span class="line">如何使用PHP来实现数据交互：https:&#x2F;&#x2F;www.itshiye.com&#x2F;03&#x2F;10300.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023—Summer Vacation</title>
      <link href="/posts/35232/"/>
      <url>/posts/35232/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="04e9620d1c02939cf8f0f8c8813073a728d3203ddb6bc2b2171a10c64ffe1b94">efefacb2b086a20a19dfbda11f33fd914768c8f5f2c1217314d4bd2ce8da3aa3a94df65caf5e5c0641fcb4e27fc6410fcf735e0fb5e58de1890fb90c712ad1f16a0b1671b9454ff8cb8040b051f9871a627885a0745c42b58290a92835640bc313e4d41d11135392e765f2dcfa3c6db34d5b2396ddecbf166006de9e4a49cbbbae91976611deaab03877d0d29badccc7d6050291b358188539e473628b18c3093fca7b5c505b372fb79d33d37271e1a5d6395ab24746d7fb926d6a4638ae4f9d88787ca57f8d337e5f1700bd967c2f0cdd74b5ce73ae0d4074c1000756c77047c8833865c100e6e1384e6776e27841b410b436da8dc7b3a702194ea7415c009b32423f67656987cca226dbe739cec16535e1a10ed9aa29e57612c9ed172a00399355707b7d5750ffbaac0d3b03b9322647f6c4cf1358bcc1037a68273eff0808cc3b2825cb2f120cb2006245b2de3cfa8e80342350008aea160a8d1744cdd8228562b9e0a6bdafe0e243dd4ab4263ee11e05d3a6dbc36b673b82d32709866802392899136df63f15d840c9a353b6747279d9647d430815978410f71f1497c4b41205c616e1dcbae693307161108ed26fe98e25aeba1233c3e08fad7da140046f39b979e9c6ed8d43f72cdf7ca41dd1a8fb565437f2c6ed52a0126615d4dc3660f11302909e364ccce36323b506a44386c03f2a07989ac96b00831cf6b36cc3c28ba744176f8a0cb1131060a7d3e9a9fa3b8c78b420a54d07efd4bf9f05b2cb68eb6987046bfc3d3d82462aa07fd7d60818ac241872e6e564189d1fb4b52e35107d76651500497bdc2861d03d828c34c50ef546e52a8bdb4d6203c026083808c61f693cba8dd2099bc82e96adfeb2243621bad052ab598d0d6320b189d3bed2177ff37bffda94eeb9275003188d192d567a08b2ffa8a396df92bd143cf2138ac262d847db8dc5e6ccda9f5d4390ce8f2c5e41a16a2f291b7228fcaab97e201109b4c3d06f14ccfd530b820a106cd84642e382d0692290a1ba4bd6bb70f8728e6de1119b80d03feda18623b3bc52bc9148da97f9be92ae3bc47e1d1b868f016c4b43ad5f0f1adc9926feb9921c5110b61cfeb08d976fa4ba9b519dd9fc1d803324fa819d4f1efd9436bc7f46269b0ef43ff9fb2778ac3238f5485d827b00a09e66ff9e5a22024c2a80757ff7e191c717dd44dd935ef517a22cac9562c6c7afc4bd0b9c96d9cab0680902d269cff4595bb8b5ddbc1a8ba3b2327eccf145d27b9ddc1dddaf77ebe5ff712cbab0ffaf162e4875367789d1e52c3bd9f77cc67c81e67381f11149f544d0a7a657e3a728fadd136fb36709644918978db791b88de87419f3d7f17c11b7b6ff7fba6eaf466f4bea65b3c6beace32e41897bc3e704e41e7c915f8bfc7ea0d017a0f75baa7866f4bc6c95f5ed56acb6ccb5365e3122fa9db1c15f111e3c1c65e440f6fc6d8d07712135018eef14d1c8ecf6c5add79f1e20bf74a680b4a926cf67622e0b36ccd0356e85461895e2b8ed0296dea2e30a990f5365a9368d7a7f3c0e9d1750c5ab051aa3159a0f224371ad2913a7abebe81f048118acc543c38a4ac15709c73498cd513b5ba0a64e04d6029f1e34989514d7c202f8091cdef025ffe88c6fa48fcbdc79c319ecf06420021d277ef55db41668775b25f3a700ff332374d65b29da996732dec491a46ecd23b3e342b641b1593296cfcdf3d99f2f0e7ea329be65fb6abe6cbe7afe32f01805a4b65781b8d9a9274780241831d0da11a3d7168604cbfa1213bb86b237d76e1a849faf436f9d235311e9492e5cfd57369aa448f66d1d32db193c42bf0bb7b8667a1d0cc87a81e3b85394ed3aa51502e257ec8feaa40acad5fbbe6c6c0986634ad603b6776b9f9ee50cef218de36e9701c2fafdf778fe8f62795727717dc2d84b859f322f5ec98531639c61cf02fe94dc3e03e1ff30ab4979edb6bb446b2380073897270113b8feabbef143c4c37394b64fffa17446a8ff7c7b63bd9fe48d05c65b2d7f469087b620a20d1135f76ec7aed3243fcbbcfee6aaf08f07fdb796fb43aad63473bb2712b9ef8aafe12c580941bd612d44437940c6d67f0882756d62467c9e4e784f2163963e5d3ba46f33889d1de768c06fa254ea332d50b2b0098080316af67f65d186b9fe74f4c1014fc145d263f98153c60720383f4963b642d9b97f5ee98c9e1409b8402450c1ec59390c37b999bb946097c9f5ae622d731a0ab5e42df8bb8ff9110846d951ac611bfd16e508c680464b926ace0faa8df3ac2817109a3a8e1d511afbd2b49a86df715675d5ae259a4b8f44a183d0ca3e42ccc1e52d37de5095b5df48cb468c26e40865ad3245e3ac038642230864c92c1e97f88d6f45562e81ac2a9527e0e45c2621197d728b0a6d31c4aa88b1affb117717a92cf646f3a5587ef73b301368bfafee3efc6239f145ca5b2b983437760091901bebe52e135b76639e7e1cd3d848b0c72b6805cbe88b23119557a32b2ecc3b3062813137a1523976b2470cde39c6d1e4416554981262da3b12dddb33c04ef9f5b081f30428d2e02cce84e041d9d259d836cba88727360957ff69bcdd479f1c55e2b2dbda97b129e79a6c62983589e075c5562408aec6b31f17df3fb1e37602c682ba2081658afd8d456b0ad69482d1d2f0f3281d3b2cdbf6d19d783d</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 4 </tag>
            
            <tag> 暑假 </tag>
            
            <tag> plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在linux上使用小皮搭建sqli靶场</title>
      <link href="/posts/46934/"/>
      <url>/posts/46934/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在linux上使用小皮搭建sqli靶场</p><a id="more"></a><h3 id="安装小皮面板"><a href="#安装小皮面板" class="headerlink" title="安装小皮面板"></a>安装小皮面板</h3><p>kali是基于Debian的，所以按照Debian无docker的版本安装的</p><img src="/pic/l1.png" alt="1" style="zoom:70%" /><p>安装成功，可以看到内网网址，直接登入小皮</p><img src="/pic/l2.png" alt="1" style="zoom:70%" /><p>然后安装基本套件，并启动SQL</p><img src="/pic/l3.png" alt="1" style="zoom:50%" /><h3 id="安装sqli-labs靶场"><a href="#安装sqli-labs靶场" class="headerlink" title="安装sqli-labs靶场"></a>安装sqli-labs靶场</h3><p>图个方便，给sqli-labs设置了域名</p><img src="/pic/l4.png" alt="1" style="zoom:50%" /><p>给靶场文件夹设置755权限（所有者拥有可读、可写、可执行权限,所属组与其他用户仅拥有可读与可执行权限）</p><img src="/pic/l5.png" alt="1" style="zoom:100%" /><p>从网页配置靶场</p><img src="/pic/l6.png" alt="1" style="zoom:50%" /><p>第一关SQL注入尝试</p><img src="/pic/l7.png" alt="1" style="zoom:50%" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">参考资料：http:&#x2F;&#x2F;www.xbhp.cn&#x2F;news&#x2F;20895.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 2 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模板注入</title>
      <link href="/posts/17608/"/>
      <url>/posts/17608/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>学习</p><a id="more"></a><ul><li>学习<ul><li><a href="https://blog.csdn.net/m0_61607810/article/details/121568121" target="_blank" rel="noopener">模板引擎</a></li><li><a href="https://www.cnblogs.com/GoIcejio/p/16593990.html" target="_blank" rel="noopener">SSTI模板注入 </a></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web </tag>
            
            <tag> 2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali的升级失败</title>
      <link href="/posts/59374/"/>
      <url>/posts/59374/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>关于我的kali今天崩掉了。</p><a id="more"></a><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><p>   最开始，我在安装盲水印需要用到的opencv-python库时，一切都还好，后来一直无法安装成功，返回“无法定位opencv-python”的结果，阅读了网上的教程，我觉得可以更新一下系统。</p><p>   于是我update了，在快要结束的时候报错了，浏览器也用不了，整个系统瘫痪，重启之后，正确的密码无法登入系统了。于是在尝试各种策略后，我成功地无法进入登录界面了，开机即报错，于是就有了以下状态：</p><img src="/pic/lk2.jpg" alt="1" style="zoom:50%" /><h3 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h3><p>与其反复报错，我自然地重装了kali，只是可惜我之前安装了那么多库和工具…</p><img src="/pic/lk1.jpg" alt="1" style="zoom:50%" />]]></content>
      
      
      
        <tags>
            
            <tag> 2 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF PWN打基础（寄存器）</title>
      <link href="/posts/7491/"/>
      <url>/posts/7491/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>寄存器</p><a id="more"></a><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><p>寄存器是计算机暂存指令、数据和地址的地方.</p><h3 id="常用寄存器及其功能整理"><a href="#常用寄存器及其功能整理" class="headerlink" title="常用寄存器及其功能整理"></a>常用寄存器及其功能整理</h3><ul><li>RIP：程序计数寄存器，来存放下一条即将用来执行的指令的地址，它决定程序执行的流程。（较常用）</li><li>RBP：栈基寄存器，存放当前栈帧的栈底地址（较常用）</li><li>RAX：通用寄存器。存放函数返回值</li><li>RSP：栈顶寄存器，存放当前栈帧的栈顶地址（较常用）</li><li>RAX：随机存取寄存器</li><li>AX：累加寄存器，分为AH高八位和AL低八位</li><li>AH：累加寄存器，AX（16位）寄存器的高八位</li><li>AL：累加寄存器，AX（16位）寄存器的低八位</li><li>EAX:累加寄存器，是很多加法乘法指令的缺省寄存器</li><li>EBX：基地址寄存器，在内存寻址时存放基地址</li><li>ECX：计数器</li><li>EDX：数据寄存器，被用于来放整数除法产生的余数</li><li>ESI：源变址寄存器</li><li>EDI：目的变址寄存器</li><li>EBP：扩展基址指针寄存器，EBP来存储当前函数状态的基地址，在函数运行时不变，可以用来索引|确定函数参数或局部变量 的位置。（较常用）</li><li>ESP：栈指针寄存器，ESP用来存储函数调用栈的栈顶地址，在压栈和退栈时 发生变化。（较常用）</li><li>EIP：指令指针寄存器，EIP用来存储即将执行的程序指令的地址, cpu依照EIP的存储内容读取指令并执行，EIP 随之指向相 邻的下一条指令,如此反复,程序就得以连续执行指令。（较常用）</li></ul><h3 id="寄存器大小"><a href="#寄存器大小" class="headerlink" title="寄存器大小"></a>寄存器大小</h3><ul><li>64位cpu对应RSP（栈顶寄存器）,RBP（栈基寄存器）,RIP（程序计数寄存器）三个寄存器。</li><li>32位cpu则对应ESP（栈指针寄存器），EBP（扩展基址指针寄存器），EIP（指令指针寄存器）三个寄存器。</li><li>R开头：64bit, 8字节（1字节=8bit）</li><li>E开头：32bit, 4字节</li><li>EAX（累加寄存器）是32位， AX 是EAX的低16位 ， AL 和AH是AX的低8位和高8位。</li><li>AX,BX,CX：16bit, 2字节</li><li>AH, AL: 8bit, 1字节</li></ul><h3 id="附加知识"><a href="#附加知识" class="headerlink" title="附加知识"></a>附加知识</h3><ul><li>BX是基（base）地址寄存器：四个寄存器中唯一可作为存储器指针使用的寄存器。</li><li>CX寄存器是计数(count)寄存器：在字符串操作和循环操作时，用它来控制重复循环操作次数。在移位操作时，cl寄存器用来保存移位的位数。</li><li>BP和SP寄存器称为指针寄存器：BP主要用于给出堆栈中数据区基址的偏移，从而方便地实现直接存取堆栈中的数据，所以BP也称为基指针寄存器，正常情况下SP只作为堆栈指针使用，即保存堆栈栈顶地址的偏移。</li></ul><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://blog.csdn.net/weixin_43780092/article/details/126694251" target="_blank" rel="noopener">CTF PWN基础知识</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 2 </tag>
            
            <tag> PWN </tag>
            
            <tag> 寄存器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练习赛Memos</title>
      <link href="/posts/52558/"/>
      <url>/posts/52558/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>赛事直达</p><a id="more"></a><ul><li><p>Algorithm</p><ul><li><a href="https://codeforces.com/contests" target="_blank" rel="noopener">Codeforce比赛</a></li><li><a href="https://www.luogu.com.cn/contest/list" target="_blank" rel="noopener">洛谷比赛</a></li><li><a href="https://pintia.cn/problem-sets/my" target="_blank" rel="noopener">PTA题目练习集赛</a></li><li><a href="https://ac.nowcoder.com/acm/contest/vip-index" target="_blank" rel="noopener">牛客竞赛</a></li></ul></li><li><p>CTF</p><ul><li><a href="https://iscc.isclab.org.cn/" target="_blank" rel="noopener">ISCC</a></li><li><a href="https://adworld.xctf.org.cn/contest/list" target="_blank" rel="noopener">攻防世界赛事中心</a></li><li><a href="https://www.ctfhub.com/#/calendar" target="_blank" rel="noopener">CTFHub赛事中心</a></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 4 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog安卓端</title>
      <link href="/posts/25776/"/>
      <url>/posts/25776/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>安卓安装包</p><a id="more"></a><p><a href="/assets/blog.apk">点击下载|安卓端</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决优化后的aplayer无法在电脑端置顶</title>
      <link href="/posts/38459/"/>
      <url>/posts/38459/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>对左侧层数进行调整</p><a id="more"></a><h3 id="z-index属性"><a href="#z-index属性" class="headerlink" title="z-index属性"></a>z-index属性</h3><p>   <strong>z-index</strong>是针对网页显示中的一个特殊属性。因为显示器是显示的图案是一个二维平面，拥有x轴和y轴来表示位置属性。为了表示三维立体的概念如显示元素的上下层的叠加顺序引入了z-index属性来表示z轴的区别。表示一个元素在叠加顺序上的上下立体关系。（来自<strong>百度百科</strong>）</p><h3 id="设置z-index属性"><a href="#设置z-index属性" class="headerlink" title="设置z-index属性"></a>设置z-index属性</h3><p><strong>注意</strong>：z-index只对定位元素有作用。要设置非static的定位属性（position），z-index才会生效。</p><p>将<code>yilia\layout\layout.ejs</code>中的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;container&quot; q-class&#x3D;&quot;show:isCtnShow&quot;&gt;</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;container&quot; q-class&#x3D;&quot;show:isCtnShow&quot; style&#x3D;&quot;position:relative; z-index:  0;&quot;&gt;</span><br></pre></td></tr></table></figure><p>本解决方法是针对<a href="https://www.yansheng.fun/article/bf60dd05.html" target="_blank" rel="noopener">hexo+yilia添加APlayer音乐播放器</a><br>中的问题：<code>播放器在pc端反而不显示，会被左侧栏挡住，只在手机端显示</code>进行解决，同时也因为我也遇到这种情况，就做了优化。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip的使用以及国内pip镜像源</title>
      <link href="/posts/39627/"/>
      <url>/posts/39627/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>直接用<code>pip install</code>安装Python包<strong>太慢了</strong>，经常<strong>time out</strong>，所以用国内镜像源来进行pip安装会更快。</p><a id="more"></a><h3 id="pip是什么"><a href="#pip是什么" class="headerlink" title="pip是什么"></a>pip是什么</h3><p> pip 是一个现代的，通用的 Python 包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。注：pip 已内置于 Python 3.4 和 2.7 及以上版本，其他版本需另行安装。（来自<strong>百度百科</strong>）</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install -i http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple</span><br><span class="line">&#x2F;&#x2F;阿里云 ，其中-i表示用后面的镜像源下载包</span><br><span class="line"></span><br><span class="line">pip install  -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple jwt</span><br><span class="line">&#x2F;&#x2F;例子，用清华源下载jwt（ctf常用的一个库）</span><br></pre></td></tr></table></figure><p>更多用法可见 <a href="https://pip.pypa.io/en/stable/cli/pip_install/" target="_blank" rel="noopener">pip install</a></p><h3 id="国内源"><a href="#国内源" class="headerlink" title="国内源"></a>国内源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">阿里云：</span><br><span class="line">https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line">百度：</span><br><span class="line">https:&#x2F;&#x2F;mirror.baidu.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line">豆瓣：</span><br><span class="line">http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F;</span><br><span class="line">清华：</span><br><span class="line">https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple&#x2F;</span><br><span class="line">中科大：</span><br><span class="line">https:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple&#x2F;</span><br></pre></td></tr></table></figure><p>你也可以访问<a href="https://mirrors.cernet.edu.cn/" target="_blank" rel="noopener">校园网镜像站</a></p><h3 id="常用pip命令"><a href="#常用pip命令" class="headerlink" title="常用pip命令"></a>常用pip命令</h3><p>来自<strong>百度百科</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">pip  [options]</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">install  安装包安装</span><br><span class="line">download 下载下载包</span><br><span class="line">uninstall  卸载卸载包</span><br><span class="line">freeze  冻结按需求格式安装的包的输出</span><br><span class="line">list 列表列出已安装的包</span><br><span class="line">show  显示已安装软件包的信息</span><br><span class="line">check  检查已安装的软件包是否具有兼容的依赖项</span><br><span class="line">config  配置管理本地和全局配置</span><br><span class="line">search  搜索PyPI查找包</span><br><span class="line">wheel  根据您的需求构建轮子</span><br><span class="line">hash  包存档的哈希计算值</span><br><span class="line">completion 用于命令完成的辅助命令</span><br><span class="line">debug  显示对调试有用的信息</span><br><span class="line">help  帮助显示命令的帮助</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">百度百科（pip）：https:&#x2F;&#x2F;baike.baidu.com&#x2F;item&#x2F;PIP&#x2F;20435212</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 2 </tag>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于getchar与while</title>
      <link href="/posts/44515/"/>
      <url>/posts/44515/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>值得注意的是记得<strong>初始化</strong>字符数组和while中运算符的<strong>优先级</strong>     </p><a id="more"></a>     <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">char s;</span><br><span class="line">char s2[1001]&#x3D;&#123;&#125;,s1[2]&#x3D;&#123;&#125;;</span><br><span class="line">while((s&#x3D;getchar())!&#x3D;&#39;\n&#39;)&#123;</span><br><span class="line">s1[0]&#x3D;s;</span><br><span class="line">strcat(s2,s1);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;s2;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C/C++语言基础 </tag>
            
            <tag> 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Bugku CTF]Simple_SSTI_1</title>
      <link href="/posts/13499/"/>
      <url>/posts/13499/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>题目链接: <a href="https://ctf.bugku.com/challenges/detail/id/196.html" target="_blank" rel="noopener">https://ctf.bugku.com/challenges/detail/id/196.html</a>   </p><a id="more"></a>    <h1 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h1><p>通过查看源代码，发现：   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You know, in the flask, We often set a secret_key variable.</span><br></pre></td></tr></table></figure><p>果然没有思路就看看源代码，就会有发现。<br>于是就读取所有config变量，其中secret_key变量，就是需要找的flag所在。so:    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?flag&#x3D;&#123;&#123;config.items()&#125;&#125;</span><br></pre></td></tr></table></figure><p>于是得到：    </p><img src="/pic/ctf_4.jpg" alt="1" style="zoom:50%" />    <h1 id="flask之ssti模版注入"><a href="#flask之ssti模版注入" class="headerlink" title="flask之ssti模版注入"></a>flask之ssti模版注入</h1><p>算了，还是贴大佬的教程吧，Orz。    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;3679</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 2 </tag>
            
            <tag> 信息安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[NSSCTF][SWPUCTF 2021 新生赛]jicao</title>
      <link href="/posts/5696/"/>
      <url>/posts/5696/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>题目链接：<a href="https://www.ctfer.vip/problem/384" target="_blank" rel="noopener">https://www.ctfer.vip/problem/384</a></p><a id="more"></a><h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><p><strong>在阅读代码后发现，当对网站传入一个post型的参数id和一个get型的参数json且满足if条件的内容，则能传回一个flag<br>于是在查阅相关资料后</strong>   </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">json_decode这个函数是对JSON格式的字符串进行编码</span><br><span class="line"></span><br><span class="line">参数json：待解码的json string格式的字符串，所以我们需要传入get型的参数json并且对他进行解码</span><br><span class="line"></span><br><span class="line">JSON 格式的字符串</span><br><span class="line">$json &#x3D; &#39;&#123;&quot;a&quot;:&quot;php&quot;,&quot;b&quot;:&quot;mysql&quot;,&quot;c&quot;:3&#125;&#39;;</span><br><span class="line">其中a为键，php为a的键值。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">实例：</span><br><span class="line"></span><br><span class="line">  &lt;?php$json &#x3D; &#39;&#123;&quot;a&quot;:&quot;php&quot;,&quot;b&quot;:&quot;mysql&quot;,&quot;c&quot;:3&#125;&#39;;</span><br><span class="line">  $json_Class&#x3D;json_decode($json);</span><br><span class="line">  $json_Array&#x3D;json_decode($json, true);</span><br><span class="line">  print_r($json_Class);</span><br><span class="line">  print_r($json_Array);</span><br><span class="line">  ?&gt;</span><br><span class="line">  程序输出：</span><br><span class="line"></span><br><span class="line">  stdClass Object (</span><br><span class="line">  [a] &#x3D;&gt; php</span><br><span class="line">  [b] &#x3D;&gt; mysql</span><br><span class="line">  [c] &#x3D;&gt; 3 )</span><br><span class="line">  Array (</span><br><span class="line">  [a] &#x3D;&gt; php</span><br><span class="line">  [b] &#x3D;&gt; mysql</span><br><span class="line">  [c] &#x3D;&gt; 3 )</span><br></pre></td></tr></table></figure><p><strong>于是我们利用传入一个post为id=wllNB，再传入json为{“x”:”wllm”}，即可获得动态的flag</strong></p><img src="/pic/ctf_3.jpg" alt="1" style="zoom:50%" />    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">参考：https:&#x2F;&#x2F;www.cnblogs.com&#x2F;kode00&#x2F;p&#x2F;16856963.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 2 </tag>
            
            <tag> 信息安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[NSSCTF][SWPUCTF 2021 新生赛]gift_F12</title>
      <link href="/posts/11193/"/>
      <url>/posts/11193/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>题目链接：<a href="https://www.ctfer.vip/problem/382" target="_blank" rel="noopener">https://www.ctfer.vip/problem/382</a></p><a id="more"></a><h2 id="进入环境，发现是个有趣-的gift"><a href="#进入环境，发现是个有趣-的gift" class="headerlink" title="进入环境，发现是个有趣~的gift"></a>进入环境，发现是个有趣~的gift</h2><img src="/pic/ctf_2 (1).jpg" alt="1" style="zoom:50%" /><h2 id="由题目f12，我直接按f12，就发现："><a href="#由题目f12，我直接按f12，就发现：" class="headerlink" title="由题目f12，我直接按f12，就发现："></a>由题目f12，我直接按f12，就发现：</h2><img src="/pic/ctf_2 (3).jpg" alt="1" style="zoom:50%" /><h2 id="but我更改了一下他的目标时间，结果，到了预定时间，仍然没有flag，真的就是“皇帝的礼物”了"><a href="#but我更改了一下他的目标时间，结果，到了预定时间，仍然没有flag，真的就是“皇帝的礼物”了" class="headerlink" title="but我更改了一下他的目标时间，结果，到了预定时间，仍然没有flag，真的就是“皇帝的礼物”了"></a>but我更改了一下他的目标时间，结果，到了预定时间，仍然没有flag，真的就是“皇帝的礼物”了</h2><img src="/pic/ctf_2 (2).jpg" alt="1" style="zoom:50%" />]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 2 </tag>
            
            <tag> 信息安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF 服务器端请求伪造（学长分享）</title>
      <link href="/posts/26804/"/>
      <url>/posts/26804/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4cb0e133612f7f3dd0a6b4f6aee31a23bff3dfefab78918fc91fcbb84b673d1a"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>板子-数据结构</title>
      <link href="/posts/55177/"/>
      <url>/posts/55177/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>数据结构模板收集</p><a id="more"></a><h3 id="单链表（数组模拟–静态）"><a href="#单链表（数组模拟–静态）" class="headerlink" title="单链表（数组模拟–静态）"></a>单链表（数组模拟–静态）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">## 单链表操作（数组模拟链表--静态链表） </span><br><span class="line">const int N&#x3D;100010;</span><br><span class="line">int head,e[N],ne[N],idx;</span><br><span class="line">void init()&#123;</span><br><span class="line">head&#x3D;-1;</span><br><span class="line">idx&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;x插入到头结点 </span><br><span class="line">void add_to_head(int x)&#123;</span><br><span class="line">ne[idx]&#x3D;head;</span><br><span class="line">head&#x3D;idx;</span><br><span class="line">e[idx]&#x3D;x;</span><br><span class="line">idx++;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;x插入到第k个节点后 </span><br><span class="line">void add(int x,int k)&#123;</span><br><span class="line">ne[idx]&#x3D;ne[k];</span><br><span class="line">ne[k]&#x3D;idx;</span><br><span class="line">e[idx]&#x3D;x;</span><br><span class="line">idx++;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;将下标是k的点后面的点删除 </span><br><span class="line">void remove(int k) &#123;</span><br><span class="line">ne[k]&#x3D;ne[ne[k]];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 3 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 算法竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Bugku CTF]社工-进阶收集</title>
      <link href="/posts/27934/"/>
      <url>/posts/27934/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>题目链接：<a href="https://ctf.bugku.com/challenges/detail/id/188.html" target="_blank" rel="noopener">https://ctf.bugku.com/challenges/detail/id/188.html</a></p><a id="more"></a><h2 id="先看题目-保护原著，已注释awa"><a href="#先看题目-保护原著，已注释awa" class="headerlink" title="先看题目(保护原著，已注释awa)"></a>先看题目(保护原著，已注释awa)</h2><!-- <img src="/pic/ctf_1.png" alt="1" style="zoom:50%" /> --><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><p>1.根据图片提示再百度识图，得到地址为西安大雁塔。</p><img src="/pic/ctf_1 (1).jpg" alt="1" style="zoom:50%" /><img src="/pic/ctf_1 (2).jpg" alt="1" style="zoom:50%" /><p>2.进入社工神器百度地图，依据“地铁”相关信息发现小美住在航天城和韦曲南两个站点之间，依据距离画圆发现在“兰乔国际城”，其小区名字拼音则为flag</p><img src="/pic/ctf_1 (3).jpg" alt="1" style="zoom:50%" /><img src="/pic/ctf_1 (4).jpg" alt="1" style="zoom:50%" />]]></content>
      
      
      
        <tags>
            
            <tag> 2 </tag>
            
            <tag> 信息安全 </tag>
            
            <tag> 社会工程学 </tag>
            
            <tag> MISC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收到一封来自5年前的自己的信</title>
      <link href="/posts/3624/"/>
      <url>/posts/3624/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h6 id="高中毕业后的这个夜晚｜收到一封来自5年前的自己的信"><a href="#高中毕业后的这个夜晚｜收到一封来自5年前的自己的信" class="headerlink" title="高中毕业后的这个夜晚｜收到一封来自5年前的自己的信"></a>高中毕业后的这个夜晚｜收到一封来自5年前的自己的信</h6><p><strong>When you want to grow, you have grown.</strong></p><a id="more"></a><img src="/pic/2020.7.20.jpg" alt="2020.7.20" style="zoom:50%" />]]></content>
      
      
      
        <tags>
            
            <tag> 4 </tag>
            
            <tag> 日常 </tag>
            
            <tag> 毕业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>万里挑一</title>
      <link href="/posts/51462/"/>
      <url>/posts/51462/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>看到<strong>何同学</strong>发布的六百万合影后，我也去找了我．</p><a id="more"></a><p><strong>降维打击后：</strong></p><img src="/pic/htx.png" alt="六百万的合影" style="zoom:50%" /><p><strong>人工打击后：</strong></p><img src="/pic/htx2.jpg" alt="六百万合影" style="zoom:50%" /><pre><code>来源：  1.【何同学】我拍了一张600万人的合影...(https://www.bilibili.com/video/BV1Nt4y1D7pW)(https://www.youtube.com/watch?v=IlDxH-Jtqnw)  2.六百万合影全景(https://ssl-offical.720yun.com/product/static/20190416/47vkOedyzqb/1555385618.html?scene_id=52207583)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 4 </tag>
            
            <tag> 日常 </tag>
            
            <tag> Bilibili </tag>
            
            <tag> 全景 </tag>
            
            <tag> 阿婆主 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MC炼药图解</title>
      <link href="/posts/25201/"/>
      <url>/posts/25201/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>…</p><a id="more"></a><img src="/pic/ly.jpg" alt="炼药图" style="zoom:50%" /><p><strong>忽略水印(滑稽</strong></p><p><strong>ps:火药加药水可以做成喷溅式的</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鬼灭之刃@.@</title>
      <link href="/posts/21678/"/>
      <url>/posts/21678/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>…（防止图片加载影响网页速度）</strong></p><a id="more"></a><img src="/pic/gm.png" alt="伊之助" style="zoom:50%" />]]></content>
      
      
      
        <tags>
            
            <tag> 4 </tag>
            
            <tag> 日常 </tag>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摄影构图points</title>
      <link href="/posts/7053/"/>
      <url>/posts/7053/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><pre><code>照片画面上的布局，结构…使客观对象比现实生活更富有表现力和艺术感染力…主体突出，恰当衬托以陪体和背景…简洁、多样、统一、均衡。——百度百科</code></pre><p>　　简单了解定义后知道一张照片是点线交织、色彩光影的配合体。但如何表现作品内容，使它具有和谐统一的结构才是首要。</p><a id="more"></a><h4 id="构图法"><a href="#构图法" class="headerlink" title="构图法　"></a>构图法　</h4><ul><li>点构图<ul><li>中心构图（突出中心，但要避免空荡）</li><li>三分点构图（元素放交点，不平衡放对应点）</li></ul></li><li>线构图<ul><li>对称线（常用于镜面，线条感）</li><li>三分线（自认为最管用，要注意上下三分线的取舍）</li><li>对角线（运动物体很直观）</li><li>曲线（景观，道路）</li><li>引导线（延伸质感）</li></ul></li><li>面构图<ul><li>前景（不要过于盲目取前景）</li><li>框架（透小观大）</li><li>填充</li><li>重复（有逻辑的重复，对称美感）</li><li>对比（鲜明）</li><li>留白（小清新）</li></ul></li></ul><h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><p>　　拍摄人物时，利用黄金分割，将人的身体或脸部置于黄金分割线或点上，都会具有强烈的表现力。而将画面的重心放在恰当的地方，可以获得饱满的画面感，彰显图画的内涵。<br>　　合理利用三分点美化。<br>　　红叶应衬绿叶，但作为陪体的绿叶，可不能喧宾夺主，而是以之来衬托内涵和情节，这样一来整幅图画就显有内涵了。<br>　　值得注意的空白部分，空白并非主体，但或不可缺，可以用空白衬主体，创造画面感。<br>　　总之，最终目的就是一个——<strong>好看！！！</strong>。  </p><pre><code>参考：   1.摄影构图（百度百科）   2.6分钟让你学会构图(https://www.bilibili.com/video/BV1Q64y1T7ox)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 4 </tag>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘录</title>
      <link href="/posts/29540/"/>
      <url>/posts/29540/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="你永远有做不完的事"><a href="#你永远有做不完的事" class="headerlink" title="你永远有做不完的事"></a>你永远有做不完的事</h4><pre><code>记住，在你离开人世的那一天，还是会留下未完的事需要别人代劳，而且也一定会有人来代劳的！别浪费了生命的每一分每一秒，再做无谓的惋惜。</code></pre><a id="more"></a><h4 id="匆匆"><a href="#匆匆" class="headerlink" title="匆匆"></a>匆匆</h4><pre><code>在逃去如飞的日子里，在千门万户的世界里的我能做些什么呢？只有徘徊罢了，只有匆匆罢了；在八千多日的匆匆里，除徘徊外，又剩些什么呢？</code></pre><h4 id="给感到不安的你"><a href="#给感到不安的你" class="headerlink" title="给感到不安的你"></a>给感到不安的你</h4><pre><code>心灵的行李没有形体，包包并不会因此变重。相反，心灵的行李会增重，渐渐重压在自己身上。不是把焦点放在明天或后天，也不是明年或十年后，而是把精神集中在“现在”这一刻。假使你已经预测到未来“可能会发生那样的情况”，在事情实际发生前，何不把那些预想都忘掉呢？只要以这种态度定下基本的思维方式，我想“不安的未来”也将会离你愈来愈远。</code></pre><h4 id="信客"><a href="#信客" class="headerlink" title="信客"></a>信客</h4><pre><code>老信客声辩不清，满脸凄伤，拿起那把剪红绸的剪刀直扎自己的手。第二天，他掂着那只伤痕累累的手找到了同村刚从上海落魄回来的年轻人，进门便说：“我名誉糟蹋了，可这乡间不能没有信客。”年轻信客上路后，一路上都遇到对老信客的询问。大半辈子的风尘苦旅，整整一条路都认识他。流落在外的游子，年年月月都等着他的脚步声。现在，他正躲在山间坟场边的破草房里，夜夜失眠，在黑暗中睁着眼，迷迷乱乱地回想着一个个码头，一条条船只，一个个面影。</code></pre><h4 id="有病呻吟"><a href="#有病呻吟" class="headerlink" title="有病呻吟"></a>有病呻吟</h4><pre><code>感冒最磨人的地方不是痛，而是下床拿温水吃药都觉得乏力。这时候，自然会想起有个爱人多好。有理由怀疑，本来对恋爱伴侣已达到可有可无心态的单身族，不介意困身而失去自由，就是小病一刻。</code></pre><h4 id="贴秋膘"><a href="#贴秋膘" class="headerlink" title="贴秋膘"></a>贴秋膘</h4><pre><code>秋风一起，胃口大开，想吃点好的，增加一点营养，补偿补偿夏天的损失，北方人谓之“贴秋膘”。</code></pre><h4 id="一个人住的第三年"><a href="#一个人住的第三年" class="headerlink" title="一个人住的第三年"></a>一个人住的第三年</h4><pre><code>会有一种节奏，慢慢地从四面八方流淌过来，让我觉得这个世界以一种与以往不一样的方式存在着，我能够清晰地听到自己，听到自己的身体里也在发出与之相应的微弱的声音。几年的时间，一个人必须要自己生活着，才是对的，否则怎么能够听到自己的节奏。一旦它流淌出来，走在马路上，坐在地铁里，独自待着的时候，与朋友在一起的时候，任何时候，它都会在那儿兀自发着自己的声音，这是属于你的声音，身体的一部分，不用再担心流失。</code></pre><h4 id="袋鼠佳日"><a href="#袋鼠佳日" class="headerlink" title="袋鼠佳日"></a>袋鼠佳日</h4><pre><code>我们早上六点醒来，拉开窗帘，一瞬间便看出这是个袋鼠佳日。我们洗脸，吃饭，喂猫，洗衣服，之后戴上太阳帽出门。</code></pre><h4 id="波心"><a href="#波心" class="headerlink" title="波心"></a>波心</h4><pre><code>萍水相逢，两人都太过吝啬，不肯付出感情。 于是事情过后，各散来西；城市人的感情，原应如此。 我是天上的一块云，偶年投影在你的波心。</code></pre><h4 id="哭"><a href="#哭" class="headerlink" title="哭"></a>哭</h4><pre><code>当众人都哭时，应该允许有的人不哭。当哭成为一种表演时，更应该允许有的人不哭。</code></pre><h4 id="在黑暗中并肩行走"><a href="#在黑暗中并肩行走" class="headerlink" title="在黑暗中并肩行走"></a>在黑暗中并肩行走</h4><pre><code>每个人对于别人来说都是一个秘密，我们应该顺应这个事实。相爱的人们也只是“在黑暗中并肩行走”，所能做到的仅是各自努力追求心中的光明，并互相感受到这种努力，互相鼓励，而“不需要注视别人的脸和探视别人的心灵”。我们对自己又真正理解了多少?一个人懂得了自己理解自己之困难，他就不会强求别人完全理解自己，也不会奢望自己完全理解别人了。然而，同样的朝圣热情使我们相信，也许存在着同一个圣地。作为有灵魂的存在物，人的伟大和悲壮尽在于此了。</code></pre><h4 id="志气与欲望"><a href="#志气与欲望" class="headerlink" title="志气与欲望"></a>志气与欲望</h4><pre><code>在这个时代的青年，能够把自己安排对了的很少。</code></pre><h4 id="简单的调查"><a href="#简单的调查" class="headerlink" title="简单的调查"></a>简单的调查</h4><pre><code>少校躺在床铺上，望着挂在墙壁钉子上的那顶包着布的钢盔和那副雪镜，听到比宁从地板上走过的脚步声，心想，这小鬼，不知道他有没有对我撒谎。</code></pre><h4 id="明日又天涯"><a href="#明日又天涯" class="headerlink" title="明日又天涯"></a>明日又天涯</h4><pre><code>有谁，在这世界上，不是孤独的生，不是孤独的死？</code></pre><h4 id="没有时间的话，请离开"><a href="#没有时间的话，请离开" class="headerlink" title="没有时间的话，请离开"></a>没有时间的话，请离开</h4><pre><code>一个男人愿意给一个女人多少时间，就是他有多爱她。你不可能说：我爱你，但我没有时间陪你。</code></pre><h4 id="集体早操"><a href="#集体早操" class="headerlink" title="集体早操"></a>集体早操</h4><pre><code>因为我的世界里，已经没有什么人群，没有什么聚会不能够不去。我站在广场上，人很多，声音很多，但是没有广播在播放：第一节，伸展运动……</code></pre><h4 id="河流最蓝的地方"><a href="#河流最蓝的地方" class="headerlink" title="河流最蓝的地方"></a>河流最蓝的地方</h4><pre><code>那段时间，连最简单的食品都受到诡计和掺假的威胁。没有哪一天报纸不提到在市场上又有惊人的发现：奶酪是用塑料做的；牛油有蜡烛的成分；蔬果类含砷杀虫剂的浓缩比例比所含的维他命还要高；为了把鸡养肥而塞给它们的一些合成药丸可能会让只吃一只鸡腿的人都变笨。</code></pre><h4 id="人生的意义与价值"><a href="#人生的意义与价值" class="headerlink" title="人生的意义与价值"></a>人生的意义与价值</h4><pre><code>根据我个人的观察，对世界上绝大多数人来说，人生一无意义，二无价值。他们也从来不考虑这样的哲学问题。走运时，手里攥满了钞票，白天两顿美食城，晚上一趟卡拉0K，玩一点小权术，耍一点小聪明，甚至恣睢骄横，飞扬跋扈，昏昏沉沉，浑浑噩噩，等到钻入了骨灰盒，也不明白自己为什么活过一生。 其中不走运的则穷困潦倒，终日为衣食奔波，愁眉苦脸，长吁短叹。即使日子还能过得去的，不愁衣食，能够温饱，然而也终日忙忙碌碌，被困于名缰，被缚于利索。同样是昏昏沉沉，浑浑噩噩，不知道为什么活过一生。在人类社会发展的长河中，我们每一代人都有自己的任务，而且是绝非可有可无的。如果人生真有意义与价值的话，其意义与价值就在于对人类发展的承上启下，承前启后的责任感。</code></pre><h4 id="快手刘"><a href="#快手刘" class="headerlink" title="快手刘"></a>快手刘</h4><pre><code>我上高中是在外地。人一走，留在家乡的童年和少年就像合上的书。往昔美好的故事，亲切的人物，甜醉的情景，就像鲜活花瓣夹在书页里，再翻开都变成了干枯了的回忆。谁能使过去的一切复活？那去世的外婆，不知去向的挚友，妈妈乌黑的卷发，久已遗失的那些美丽的书，那跑丢了的蓝眼睛的小白猫……还有快手刘。</code></pre><h4 id="走钢丝的演员"><a href="#走钢丝的演员" class="headerlink" title="走钢丝的演员"></a>走钢丝的演员</h4><pre><code>走钢丝的演员本想往回走，照人们希望的那样去做，可是他已经不再像开始那样心如止水、步履轻盈了。因为他意识到自己的处境是多么危险，再加上歇了那么久，所以他紧张、手脚僵硬，结果脚下一滑，摔了下来。他倒在地上，意识逐渐变得模糊；终于，在那一刻，他感觉自己得到了解脱。</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 4 </tag>
            
            <tag> 日常 </tag>
            
            <tag> 文摘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/posts/d95d7e09/"/>
      <url>/posts/d95d7e09/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="毫不尴尬的说"><a href="#毫不尴尬的说" class="headerlink" title="毫不尴尬的说"></a>毫不尴尬的说</h3><p>没有什么好说的啊…<br>任重而道远…</p><a id="more"></a><p>我会好好维护的博客的…</p><h3 id="算了，真没什么好说的"><a href="#算了，真没什么好说的" class="headerlink" title="算了，真没什么好说的"></a>算了，真没什么好说的</h3><p>仅此纪念</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 4 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
